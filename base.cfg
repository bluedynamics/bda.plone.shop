[buildout]
parts =
    instance
    omelette
    coverage
    test
    robot
    test-coverage
    releaser
    code-analysis
    i18ndude

git-clone-depth = 50

develop = .
unzip = true

package-min-coverage = 80

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-ignore = C901,E241,F402
flake8-max-complexity = 20
clean-lines = False
imports = True
debug-statements = True
utf8-header = True

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = off
deprecation-warnings = on
blob-storage = var/blobstorage
environment-vars =
    zope_i18n_compile_mo_files true


eggs =
    Pillow
    bda.plone.shop
    bda.plone.stripe
    bda.plone.gtm
    pdbpp

zcml =
    bda.plone.shop
    bda.plone.stripe
    bda.plone.gtm

[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser[recommended]

[test]
recipe = zc.recipe.testrunner
eggs =
    pdbpp
    souper
    souper.plone[test]
    bda.plone.cart[test]
    bda.plone.checkout[test]
    bda.plone.discount[test]
    bda.plone.orders[test]
    bda.plone.payment[test]
    bda.plone.shipping[test]
    bda.plone.shop[test]

[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework
    pdbpp
    plone.reload
    plone.app.debugtoolbar
    Products.PrintingMailHost

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/src/bda/plone/shop bin/test
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance:eggs}
ignore-develop = true

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude
